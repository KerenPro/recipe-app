{"version":3,"sources":["Recipe/Recipe.js","App.js","reportWebVitals.js","index.js","Recipe/recipe.module.css"],"names":["Recipe","props","className","style","recipe","title","ingredients","map","ingredient","text","calories","toFixed","image","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","id","type","placeholder","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAoBeA,MAjBf,SAAgBC,GACZ,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,oBAAIF,UAAWC,IAAME,MAArB,SAA6BJ,EAAMI,QACnC,8CACA,6BACKJ,EAAMK,YAAYC,KAAI,SAAAC,GAAU,OACjC,6BAAKA,EAAWC,YAGpB,2CAAcR,EAAMS,SAASC,QAAQ,MACrC,qBAAKT,UAAWC,IAAMS,MAAOC,IAAKZ,EAAMW,MAAOE,IAAKb,EAAMI,Y,MCwCvDU,MAjDf,WAEA,IAFe,EAKeC,mBAAS,IALxB,mBAKRC,EALQ,KAKCC,EALD,OAMaF,mBAAS,IANtB,mBAMRG,EANQ,KAMAC,EANA,OAOWJ,mBAAS,IAPpB,mBAORK,EAPQ,KAODC,EAPC,KASfC,qBAAW,WACTC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBd,OACE,sBAAK5B,UAAU,MAAf,UACI,uBAAMA,UAAU,cAAc6B,SARpB,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAKJ,UACI,uBAAOlB,UAAU,aAAagC,GAAG,iBAAiBC,KAAK,OAAOC,YAAY,2BAA2BC,MAAOlB,EAAQmB,SAb3G,SAAAN,GACnBZ,EAAUY,EAAEO,OAAOF,UAaT,wBAAQnC,UAAU,gBAAgBiC,KAAK,SAAvC,uBAEN,qBAAKjC,UAAU,UAAf,SACKe,EAAQV,KAAI,SAAAH,GAAM,OACnB,cAAC,EAAD,CAEAC,MAAOD,EAAOA,OAAOoC,MACrB9B,SAAUN,EAAOA,OAAOM,SACxBE,MAAOR,EAAOA,OAAOQ,MACrBN,YAAaF,EAAOA,OAAOE,aAJpBF,EAAOA,OAAOoC,gBC/BhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.f3add8eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nfunction Recipe(props) {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1 className={style.title}>{props.title}</h1>\r\n            <h2>Ingredients:</h2>\r\n            <ul>\r\n                {props.ingredients.map(ingredient =>(\r\n                <li>{ingredient.text}</li>\r\n                ))}\r\n            </ul>\r\n            <p>Calories: {props.calories.toFixed(2)}</p>\r\n            <img className={style.image} src={props.image} alt={props.title}></img>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Recipe;","import React, {useEffect, useState} from 'react';\nimport Recipe from \"./Recipe/Recipe\";\nimport './App.css';\n\n\nfunction App() {\n\nconst APP_ID = '515e1ec2';\nconst APP_KEY = '4aa842d9247f8305175b336cc9989844';\n\nconst [recipes, setRecipes] = useState([]);\nconst [search, setSearch] = useState('');\nconst [query, setQuery] = useState('');\n\nuseEffect( () => {\n  getRecipes();\n}, [query])\n\nconst getRecipes = async () => {\n  const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n  const data = await response.json();\n  setRecipes(data.hits);\n}\n\nconst handleSearch = e => {\n  setSearch(e.target.value);\n}\n\nconst getSearch = e => {\n  e.preventDefault();\n  setQuery(search);\n  setSearch('');\n}\n\n  return (\n    <div className=\"App\">\n        <form className=\"search-form\" onSubmit={getSearch} >\n            <input className=\"search-bar\" id=\"standard-basic\" type=\"text\" placeholder=\"Search for an ingredient\" value={search} onChange={handleSearch}/>\n            <button className=\"search-button\" type=\"submit\">Search</button>\n        </form>\n      <div className=\"recipes\">\n          {recipes.map(recipe =>(\n          <Recipe \n          key = {recipe.recipe.label}\n          title={recipe.recipe.label} \n          calories={recipe.recipe.calories}\n          image={recipe.recipe.image} \n          ingredients={recipe.recipe.ingredients}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__hVZl3\",\"image\":\"recipe_image__1y7HY\",\"title\":\"recipe_title__2G7E4\"};"],"sourceRoot":""}